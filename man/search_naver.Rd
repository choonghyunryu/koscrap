% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_naver.R
\name{search_naver}
\alias{search_naver}
\title{네이버 검색}
\usage{
search_naver(
  query = NULL,
  type = c("news", "blog", "cafearticle"),
  chunk = 100,
  chunk_no = 1,
  sort = c("date", "sim"),
  do_done = FALSE,
  max_record = 1000L,
  client_id = Sys.getenv("NAVER_CLIENT_ID"),
  client_secret = Sys.getenv("NAVER_CLIENT_SECRET"),
  verbose = TRUE
)
}
\arguments{
\item{query}{character. 검색을 원하는 문자열}

\item{type}{character. 검색의 종류. "news", "blog", "cafearticle"에서 선택.}

\item{chunk}{integer. 검색 결과 출력 건수 지정 (1~100)}

\item{chunk_no}{integer. 검색 시작 위치로 최대 1000까지 가능}

\item{sort}{character. 정렬 옵션: sim (유사도순), date (날짜순)}

\item{do_done}{logical. 한번의 호출로 모든 조회 결과를 가져오지 못할 경우,
추가로 호출해서 모든 결과를 가져올지의 여부}

\item{max_record}{integer. 최대 조회할 건수. 실제로 검색한 건수는 max_record와 정확히 일치하지 않을 수 있습니다.
chunk의 개수로 데이터를 수집하기 때문에 일반적인 경우에는 max_record보다 같거나  큰 chunk의 배수만큼 데이터를 가져옵니다.
do_done가 FALSE일 경우에는 적용되지 않습니다.}

\item{client_id}{character. 애플리케이션 등록 시 발급받은 Client ID}

\item{client_secret}{character. 애플리케이션 등록 시 발급받은 Client Secret}
}
\value{
data.frame
변수 목록은 다음과 같음.:

뉴스일 경우:
\itemize{
\item title : character. 기사의 타이틀
\item originallink : character. 검색 결과 문서의 제공 언론사 하이퍼텍스트 link
\item link : character. 검색 결과 문서의 제공 네이버 하이퍼텍스트 link
\item description : character. 검색 결과 문서의 내용을 요약한 패시지 정보.
문서 전체의 내용은 link를 따라가면 읽을 수 있음. 패시지에서 검색어와 일치하는 부분은 태그로 감싸져 있음
\item publish_date : POSIXct. 검색 결과 문서가 네이버에 제공된 시간
\item title_text : character. 타이틀에서 HTML 태크를 제거한 텍스트
\item description_text : character. 요약한 패시지 정보에서 HTML 태크를 제거한 텍스트
}

블로그 포스트일 경우:
\itemize{
\item title : character. 포스트의 타이틀
\item link : character. 검색 결과 포스트 하이퍼텍스트 link
\item description : character. 검색 결과 문서의 내용을 요약한 패시지 정보.
문서 전체의 내용은 link를 따라가면 읽을 수 있음. 패시지에서 검색어와 일치하는 부분은 태그로 감싸져 있음
\item bloggername : character. 블로거의 이름
\item bloggerlink : character. 블로거의 하이퍼텍스트 link
\item post_date : Date. 블로그 포스트가 작성된 날짜
\item title_text : character. 타이틀에서 HTML 태크를 제거한 텍스트
\item description_text : character. 요약한 패시지 정보에서 HTML 태크를 제거한 텍스트
}

카페 게시글일 경우:
\itemize{
\item title : character. 게시글의 타이틀
\item link : character. 검색 결과 문서의 제공 네이버 하이퍼텍스트 link
\item description : character. 검색 결과 문서의 내용을 요약한 패시지 정보.
문서 전체의 내용은 link를 따라가면 읽을 수 있음. 패시지에서 검색어와 일치하는 부분은 태그로 감싸져 있음
\item cafe_name : character. 카페 이름
\item cafe_url : character. 카페 하이퍼텍스트 link
\item title_text : character. 타이틀에서 HTML 태크를 제거한 텍스트
\item description_text : character. 요약한 패시지 정보에서 HTML 태크를 제거한 텍스트
}
}
\description{
네이버 뉴스/블로그/카페 게시글 검색 결과를 출력해주는 REST API를 호출하여, 뉴스/블로그/카페 게시글 정보를 검색합니다.
}
\details{
네이버에서 발급받은 Client ID, Client Secret는 개인이 발급받은 키를 사용하며,
유출되어서는 안됩니다.
}
\examples{
\donttest{
# Your authorized API keys
client_id <- "XXXXXXXXXXXXXXXXXXXXXXX"
client_secret <- "XXXXXXXXX"

# 뉴스 검색
search_list <- search_naver(
  "불평등", client_id = client_id, client_secret = client_secret
)

# 뉴스 검색
search_list <- search_naver(
  "불평등", client_id = client_id, client_secret = client_secret,
  do_done = TRUE, max_record = 350
)

# 블로그 포스트 검색
search_list <- search_naver(
  "불평등", "blog",  client_id = client_id, client_secret = client_secret
)

}

}
